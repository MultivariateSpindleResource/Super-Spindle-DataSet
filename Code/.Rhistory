resSig_IP_w0<-res[res_IP_w0$padj<0.1,]
head(resSig_IP_w0[order(resSig_IP_w0$pval),])
resSig_IP_w0<-res_IP_w0[res_IP_w0$padj<0.1,]
head(resSig_IP_w0[order(resSig_IP_w0$pval),])
resSig_IP<-res_IP_w0[res_IP$padj<0.1,]
head(resSig_IP[order(resSig_IP$pval),])
resSig_IP<-res_IP[res_IP$padj<0.1,]
head(resSig_IP[order(resSig_IP$pval),])
new_complete_data_set<-round(complete_data_set[c(1,2,3,4,5,6)])
new_complete_data_set_w0<-new_complete_data_set-1
head(new_complete_data_set)
head(new_complete_data_set_w0)
new_complete_data_set2<-round(complete_data_set[c(1,2,5,6,3,4)])
ncu = counts( cds, normalized=TRUE )[ , conditions(cds)=="untreated" ]
plotMA(data.frame(baseMean = rowMeans(ncu),
+ log2FoldChange = log2( ncu[,2] / ncu[,1] )),
+ col = "black")
plotMA(data.frame(baseMean = rowMeans(ncu),
log2FoldChange = log2( ncu[,2] / ncu[,1] )),
col = "black")
plotMA(data.frame(baseMean = rowMeans(ncu),log2FoldChange = log2( ncu[,2] / ncu[,1] )),col = "black")
pData
?pData
pData(cds_IP)
fitInfo(cds)
head(fitInfo(cds))
fitInfo(cds)$perGeneDispEsts
?sign
source("http://bioconductor.org/biocLite.R")
biocLite("genefilter")
library(edgeR)
source("http://bioconductor.org/biocLite.R")
biocLite('edgeR')
source('~/.active-rstudio-document')
library(edgeR)
library(ggplot2)
#source("http://bioconductor.org/biocLite.R")
#biocLite('DESeq')
library(DESeq)
complete_data_set<-read.table(file="/Volumes/Magdalenas_Bigger_Boy/SEQ_DATA_2011/4_ANALYSIS_2012/5_LOCAL_ANALYSIS_Deep_SEQ_Data_Trop/Analysis/Introns/INTRONS_scatterplots/eff_counts_merged_all_xprs_files_introns_UCSC_10242014.txt", header=TRUE, stringsAsFactors = FALSE)
head(complete_data_set)
new_complete_data_set<-round(complete_data_set[c(1,2,3,4,5,6)])
head(new_complete_data_set)
names(new_complete_data_set)
#[1] "eff_counts_input1" "eff_counts_input2" "eff_counts_IP1"    "eff_counts_IP2"
deSeq_dataset<-newCountDataSet(new_complete_data_set[c(5,6,3,4)],c('cond1','cond1','cond2','cond2')) #mock 1, mock 2, IP 1, IP 2
deSeq_dataset<-estimateSizeFactors(deSeq_dataset)
deSeq_dataset<-estimateDispersions(deSeq_dataset,method='pooled',fitType='local')
de<-nbinomTest(deSeq_dataset,'cond1','cond2')
plot3<-ggplot()
plot3<-plot3+geom_point(data=de,aes(x=log10(de$baseMeanA),y=log10(de$baseMeanB)),colour=ifelse(de$pval < 0.05 & de$log2FoldChange>0,"red",ifelse(de$pval < 0.05 & de$log2FoldChange<0,'blue',"black")),alpha=0.5)
plot3+labs(title="Intron enrichment in IP fraction",x="log10(Mean effective read count -mock)",y='log10(Mean effective read count - IP)')
plot3mod<-ggplot()
plot3mod<-plot3mod+geom_point(data=de,aes(x=log10(de$baseMeanA),y=log10(de$baseMeanB),colour= de$pval < 0.05 & de$log2FoldChange>0,size = de$pval < 0.05 & de$log2FoldChange>0 ),alpha=0.5)
plot3mod<-plot3mod+scale_color_manual(name='significant',values=setNames(c('red','black'),c(TRUE,FALSE)))
plot3mod<-plot3mod+scale_size_manual(name='significant_2',values=setNames(c(4,2),c(TRUE,FALSE)))
plot3mod+labs(title="Intron enrichment in IP fraction",x="log10(Mean effective read count -mock)",y='log10(Mean effective read count - IP)')
ggsave("/Volumes/Magdalenas_Bigger_Boy/SEQ_DATA_2011/4_ANALYSIS_2012/5_LOCAL_ANALYSIS_Deep_SEQ_Data_Trop/Analysis/Introns/INTRONS_scatterplots/RH_2.png")
1.5*14
460/25
32000/80
3.2e6
3.2e6/2e5
(2e5)/15000
2e5*34
374/80
352/80
2000/2.5
1000/50
1000/10
2.5*342
855*0.2
200/100
200/20
200/800
1000/50
200/20
1.25*75
93.75*10/1000
390+380
7000+770
/16
7770/16
25/0.5
10/50
0.25*342
25/0.5
40/50
100/37
600/37
200/37
237/10
30/0.1
130/300
130*8
1040/300
0.9*800/24
800/30
10-0.08-2-0.4-0.5-0.2
10-0.08-2-5-0.5-0.2
9.25+9.25
9.25+9.25+192.20+2+37
350*0.37
350/37
350+3500
3850/16
3850+3850/16
2000/250
4091/8
25/0.5
460/50
4600/50
200/25
2000/8
50/55
5/50
55/50
50*1.4
50/12
2**5
2**6
64*10
0.08*9
0.2*9
6.82*9
2.2*9
20*1.1
30/5
30-0.4-6-0.2-0.4-20
0.5+0.2+5+2.2+2+0.08
50/12
20/4.1666
20-0.5-4.8-1
20-0.5-4-0.4-0.4-1
20-0.5-4-0.4-0.4-1
20-0.5-4.8-1
vvnv b zxcxzzxxcvbnxzcvbnmvbnerfgrtft5rfwq34eu7i8oy6htyujkm,./m,
30*0.
30*0.6
30*1.3
39-18
1e-12
1e-3
(1e-12)*0.0051
(1e-12)*0.0051*(1e-6)
(1e-12)*0.0051/(1e-6)
(1e-12)*0.0076/(1e-6)
300/8
1528/2001
473/2001
1528/2001/2
chisq.test(c(886,642,441,32),p=c(0.38,0.38,0.12,0.12))
library(ggplot2)
mtcars
head(mtcars)
unique(mtcars$vs)
unique(mtcars$am)
length(mtcars)
dim(mtcars)
names(mtcars)
names(mtcars[,1])
(mtcars[,1])
(mtcars[,1].name)
(name(mtcars[,1]))
?mean
?multiplot
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
?list
list(50)
list()
plot_list=list()
for (i in 1:length(dfo_no_CAT_NUM)){
#print(mean(dfo_no_CAT_NUM[,i],na.rm=TRUE))
[[i]]<-i
}
biocLite()
?biocLite
??biocLite
source("http://bioconductor.org/biocLite.R")
0.168/2
1600/400
200/80
25/0.1
500/250
300/500
300/200
100/80
90/80
90/80/2
20*40*16
20*40
13.6*0.4/24.5
50*0.6
40*1.8
27*1.1
27*1.2
27*1.4
1.3*50
1.3*50-25
1.1*50-25
0.6*50
0.7*50
0.7*20
0.6*20
1.1*50
install.packages("ParallelForest")
library(parallel)
-10*log10(0.05)
10**(-2.8)
-10*log10(0.002)
-10*log10(0.005)
?pi
pi*2
107891+22025
2701600+1073655
115339+26457
2811384+1182119
library(RIPSeeker)
library(RIPSeeker)
library(edgeR)
library(corrplot)
install.packages('corrplot')
library(corrplot)
citation(corrplot)
citation('corrplot')
library(plyr)
?ddply
?ddply
?transform
?glm
install.packages('cars')
install.packages('cars')
install.packages('cars')
install.packages('cars')
install.packages('car')
?vif
library(car)
?vif
library(HH)
install.packages('HH')
install.packages('VIF')
library(VIF)
library(HH)
install.packages('fmsb')
install.packages('faraway')
install.packages('corrplot')
library(corrplot)
? which
install.packages('reshape')
?vector
?vector
?log
?tapply
library(fmsb)
?fmsb
??fmsb
#stepwise VIF function used below
vif_func<-function(in_frame,thresh=10,trace=T,...){
require(fmsb)
if(class(in_frame) != 'data.frame') in_frame<-data.frame(in_frame)
#get initial vif value for all comparisons of variables
vif_init<-NULL
for(val in names(in_frame)){
form_in<-formula(paste(val,' ~ .'))
vif_init<-rbind(vif_init,c(val,VIF(lm(form_in,data=in_frame,...))))
}
vif_max<-max(as.numeric(vif_init[,2]))
if(vif_max < thresh){
if(trace==T){ #print output of each iteration
prmatrix(vif_init,collab=c('var','vif'),rowlab=rep('',nrow(vif_init)),quote=F)
cat('\n')
cat(paste('All variables have VIF < ', thresh,', max VIF ',round(vif_max,2), sep=''),'\n\n')
}
return(names(in_frame))
}
else{
in_dat<-in_frame
#backwards selection of explanatory variables, stops when all VIF values are below 'thresh'
while(vif_max >= thresh){
vif_vals<-NULL
for(val in names(in_dat)){
form_in<-formula(paste(val,' ~ .'))
vif_add<-VIF(lm(form_in,data=in_dat,...))
vif_vals<-rbind(vif_vals,c(val,vif_add))
}
max_row<-which(vif_vals[,2] == max(as.numeric(vif_vals[,2])))[1]
vif_max<-as.numeric(vif_vals[max_row,2])
if(vif_max<thresh) break
if(trace==T){ #print output of each iteration
prmatrix(vif_vals,collab=c('var','vif'),rowlab=rep('',nrow(vif_vals)),quote=F)
cat('\n')
cat('removed: ',vif_vals[max_row,1],vif_max,'\n\n')
flush.console()
}
in_dat<-in_dat[,!names(in_dat) %in% vif_vals[max_row,1]]
}
return(names(in_dat))
}
}
library(tree)
install.packages('tree')
install.packages('psych')
library(psych)
describe(bfi)
head(bfi)
bfi[1:25]
df=bfi[1:25]
scree(df)
fa.parallel(bfi)
fa.parallel(df)
gg_color_hue <- function(n) {
#Generates uniformly ditributed colors on the hues color wheel
#This is the color assignment used by ggplot2
hues = seq(15, 375, length=n+1)
hcl(h=hues, l=65, c=100)[1:n]
}
gg_color_hue(5)
plot(1:5
)
plot(1:5, col=gg_color_hue(5))
plot(1:5, fill=gg_color_hue(5))
plot(1:5, col=gg_color_hue(5))
plot(1:5, col=gg_color_hue(5),pch=16)
data("iris")
iris
data("Titanic")
Titanic
str(Titanic)
dim(Titanic)
dim(Titanic$Class)
?reorder
library(AppliedPredictiveModeling)
library(ggplot2)
#library(devtools)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
library(scatterplot3d)
#install.packages('scatterplot3d')
library(caret)
library(MASS)
library(corrplot)
setwd('/Volumes/Seagate_RED/A_Heald_Lab/A_My_papers/A_TECH_PAPER/Super-Spindle-DataSet/Code')
df_cont=read.csv('../Data/TPX2_no_Y_transf.csv',header = TRUE, stringsAsFactors=FALSE)
df_cont_w_Y = read.csv('../Data/TPX2_df_with_bin_Y.csv', header = TRUE, stringsAsFactors=FALSE)
dim(df_cont) #one dimension too many!
head(df_cont)
names(df_cont)
names(df_cont_w_Y)
df_cont=df_cont[,!names(df_cont) %in% c('X')]
df_cont_w_Y=df_cont_w_Y[,!names(df_cont_w_Y) %in% c('X')]
names(df_cont)
names(df_cont_w_Y)
Target=df_cont_w_Y[,'Metadata_Treatment']
names(apply(df_cont, 2, var, na.rm=TRUE)[which(apply(df_cont, 2, var, na.rm=TRUE)==0)])#AreaShape_EulerNumber
df_cont.no_null_var=df_cont[,names(apply(df_cont, 2, var, na.rm=TRUE)[which(apply(df_cont, 2, var, na.rm=TRUE)!=0)])]
df_cont.pca.2=prcomp(df_cont.no_null_var, center = TRUE, scale=TRUE)
str(df_cont.pca)
plot(df_cont.pca.2, type='l')
ggbiplot(df_cont.pca.2, obs.scale = 1, var.scale = 1, groups=as.character(Target), ellipse=TRUE, circle=FALSE, var.axes=FALSE, ellipse.prob = 0.68, varname.abbrev=TRUE, varname.size = 0, alpha=0.5)+scale_color_manual(values=c('#7F7F7F','#179B33'))
library(psych)
#this once is transformed already (equivalent to df_cont_no_Y_trans_no_null_var in the NB)
fa.parallel(df_cont.no_null_var)
?fa.parallel
df_cont=read.csv('../Data/TPX2_df_with_bin_Y.csv',header = TRUE, stringsAsFactors=FALSE)
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Intensity_MeanIntensity_Rhodamine,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_Intensity_MeanIntensity_Rhodamine_15.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=1/Math_AspectRatio ,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_Math_AspectRatio_5.pdf')
#13
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_Eccentricity ,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_violin_AreaShape_Eccentricity_13.pdf')
#20
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=log(AreaShape_Compactness),fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_violin_log_AreaShape_Compactness_20.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=log(AreaShape_Compactness),fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_log_AreaShape_Compactness_20.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_Eccentricity ,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_AreaShape_Eccentricity_13.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=log(AreaShape_Compactness),fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_Extent,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_log_AreaShape_Extent_32.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Intensity_MedianIntensity_DNA,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/Intensity_MedianIntensity_DNA_47.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_MeanRadius,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/AreaShape_MeanRadius_52.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Mean_FilteredChromatin_AreaShape_MajorAxisLength,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/Mean_FilteredChromatin_AreaShape_MajorAxisLength_55.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=log(Mean_FilteredChromatin_AreaShape_MajorAxisLength),fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/Mean_FilteredChromatin_AreaShape_MajorAxisLength_55.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Mean_FilteredChromatin_Intensity_IntegratedIntensity_DNA,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/Mean_FilteredChromatin_Intensity_IntegratedIntensity_DNA_63.pdf')
load('../Data/TPX2_features_PCA.Robj')
ggbiplot(df_cont_no_Y_trans_no_null_var_PCA.3.params , obs.scale = 1, var.scale = 1, groups=as.character(Y_binary), ellipse=TRUE, circle=FALSE, var.axes=FALSE, ellipse.prob = 0.68, varname.abbrev=TRUE, varname.size = 0, alpha=0.5)+scale_color_manual(values=c('#7F7F7F','#179B33'))
load('../Data/TPX2_features_PCA.Robj')
ggbiplot(df_cont_no_Y_trans_no_null_var_PCA.3.params , obs.scale = 1, var.scale = 1, groups=as.character(Y_binary), ellipse=TRUE, circle=FALSE, var.axes=FALSE, ellipse.prob = 0.68, varname.abbrev=TRUE, varname.size = 0, alpha=0.5)+scale_color_manual(values=c('#7F7F7F','#179B33'))
ggsave(file='../Plots//TPX2_features_ggbiplot_PCA.pdf',useDingbats=FALSE)
#47 Intensity_MedianIntensity_DNA
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Intensity_MedianIntensity_DNA,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_Intensity_MedianIntensity_DNA_47.pdf')
#52 AreaShape_MeanRadius
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_MeanRadius,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_AreaShape_MeanRadius_52.pdf')
#55 Mean_FilteredChromatin_AreaShape_MajorAxisLength
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=log(Mean_FilteredChromatin_AreaShape_MajorAxisLength),fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_Mean_FilteredChromatin_AreaShape_MajorAxisLength_55.pdf')
#63 Mean_FilteredChromatin_Intensity_IntegratedIntensity_DNA
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Mean_FilteredChromatin_Intensity_IntegratedIntensity_DNA,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_Mean_FilteredChromatin_Intensity_IntegratedIntensity_DNA_63.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_Extent,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_violin_log_AreaShape_Extent_32.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Intensity_MedianIntensity_DNA,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_violin_Intensity_MedianIntensity_DNA_47.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_MeanRadius,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_violin_AreaShape_MeanRadius_52.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=log(Mean_FilteredChromatin_AreaShape_MajorAxisLength),fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_Mean_FilteredChromatin_AreaShape_MajorAxisLength_55.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Mean_FilteredChromatin_Intensity_IntegratedIntensity_DNA,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_Mean_FilteredChromatin_Intensity_IntegratedIntensity_DNA_63.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_MeanRadius,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
#ggsave('../Plots/TPX2_violin_AreaShape_MeanRadius_52.pdf')
ggsave('../Plots/TPX2_violin_AreaShape_MeanRadius_52.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=Intensity_MedianIntensity_DNA,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_Intensity_MedianIntensity_DNA_47.pdf')
plot.1=ggplot()
plot.1 = plot.1+geom_violin(data=df_cont,aes(x=Metadata_Treatment,y=AreaShape_Extent,fill=factor(Metadata_Treatment)))
plot.1+theme(legend.position='none')+scale_fill_manual(values=c('#7F7F7F','#179B33'))
ggsave('../Plots/TPX2_violin_log_AreaShape_Extent_32.pdf')
